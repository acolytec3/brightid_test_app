{"version":3,"sources":["../../brightIdSDK/dist/testMethods.js","App.tsx","serviceWorker.ts","index.tsx","../../brightIdSDK/dist/index.js","../../brightIdSDK/dist/appMethods.js"],"names":["__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__importDefault","mod","__esModule","Object","defineProperty","exports","axios_1","require","putTestingBlock","operation","testingKey","context","contextId","nodeUrl","endpoint","default","put","params","res","console","log","data","response","status","statusText","removeTestingBlock","delete","App","React","useState","verified","setVerified","privateKey","setPrivateKey","setTestingKey","setContext","setContextId","deeplink","setDeeplink","setRes","verify","a","verifyContextId","JSON","stringify","trySponsor","sponsor","testBlocks","op","deleteTestBlocks","useEffect","generateDeeplink","align","w","px","borderWidth","borderColor","p","minWidth","size","my","placeholder","onChange","evt","target","onClick","v4","isLoaded","color","overflow","href","direction","mb","isDisabled","hasOwnProperty","unique","toString","height","fontSize","isReadOnly","spacing","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","appMethods_1","availableSponsorships","testMethods_1","fast_json_stable_stringify_1","base64_js_1","tweetnacl_1","get","key","sponsorships","statusReason","name","app","timestamp","Date","now","v","sig","getMessage","arrayedMessage","Buffer","from","keyBuffer","toByteArray","signature","sign","detached","fromByteArray","post","hash","signedOp","k","includes","unusedSponsorships"],"mappings":"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","file":"static/js/main.488609e4.chunk.js","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = __importDefault(require(\"axios\"));\nexports.putTestingBlock = (operation, testingKey, context, contextId, nodeUrl) => __awaiter(void 0, void 0, void 0, function* () {\n    const endpoint = nodeUrl\n        ? nodeUrl + `/node/v5/testblocks`\n        : \"https://app.brightid.org/node/v5/testblocks\";\n    try {\n        let res;\n        switch (operation) {\n            case \"verification\":\n                res = yield axios_1.default.put(`${endpoint}/${context}/verification/${contextId}`, null, { params: { testingKey } });\n                break;\n            case \"sponsorship\":\n                res = yield axios_1.default.put(`${endpoint}/${context}/sponsorship/${contextId}`, null, { params: { testingKey } });\n                break;\n            case \"link\":\n                res = yield axios_1.default.put(`${endpoint}/${context}/link/${contextId}`, null, {\n                    params: { testingKey },\n                });\n                break;\n            default:\n                return {};\n        }\n        console.log(res);\n        return res.data;\n    }\n    catch (err) {\n        console.log(err.response);\n        return { status: err.response.status, statusText: err.response.statusText, data: err.response.data };\n    }\n});\nexports.removeTestingBlock = (operation, testingKey, context, contextId, nodeUrl) => __awaiter(void 0, void 0, void 0, function* () {\n    const endpoint = nodeUrl\n        ? nodeUrl + `/node/v5/testblocks`\n        : \"https://app.brightid.org/node/v5/testblocks\";\n    try {\n        let res;\n        switch (operation) {\n            case \"verification\":\n                res = yield axios_1.default.delete(`${endpoint}/${context}/verification/${contextId}`, { params: { testingKey } });\n                break;\n            case \"sponsorship\":\n                res = yield axios_1.default.delete(`${endpoint}/${context}/sponsorship/${contextId}`, { params: { testingKey } });\n                break;\n            case \"link\":\n                res = yield axios_1.default.delete(`${endpoint}/${context}/link/${contextId}`, {\n                    params: { testingKey },\n                });\n                break;\n            default:\n                return {};\n        }\n        console.log(res);\n        return res.data;\n    }\n    catch (err) {\n        console.log(err.response);\n        return { status: err.response.status, statusText: err.response.statusText, data: err.response.data };\n    }\n});\n","import { Box, Button, ChakraProvider, Code, Flex, Heading, HStack, Input, Link, Skeleton, Text, Textarea, VStack } from '@chakra-ui/react';\nimport { generateDeeplink, putTestingBlock, removeTestingBlock, sponsor, verifyContextId } from 'brightid_sdk';\nimport QRCode from 'qrcode.react';\nimport React from 'react';\nimport { v4 } from 'uuid';\n\nfunction App() {\n  const [verified, setVerified] = React.useState<any>()\n  const [privateKey, setPrivateKey] = React.useState<string>()\n  const [testingKey, setTestingKey] = React.useState<string>()\n  const [context, setContext] = React.useState<string>()\n  const [contextId, setContextId] = React.useState<string>()\n  const [deeplink, setDeeplink] = React.useState<string>()\n  const [res, setRes] = React.useState<string>()\n\n  const generateContextId = () => {\n    setContextId(v4())\n  }\n\n  const verify = async () => {\n    let res = await verifyContextId(context!, contextId!)\n    setVerified(res)\n    setRes(JSON.stringify(res, null, 2))\n    console.log(res)\n  }\n\n  const trySponsor = async () => {\n    let res = await sponsor(privateKey!, context!, contextId!)\n    setRes(JSON.stringify(res, null, 2))\n    console.log(res)\n  }\n\n  const testBlocks = async (op: string) => {\n    let res = await putTestingBlock(op, testingKey!, context!, contextId!)\n    setRes(JSON.stringify(res, null, 2))\n    console.log(res)\n\n  }\n\n  const deleteTestBlocks = async (op: string) => {\n    let res = await removeTestingBlock(op, testingKey!, context!, contextId!)\n    setRes(JSON.stringify(res, null, 2))\n    console.log(res)\n  }\n\n  React.useEffect(() => {\n    if (context && contextId) {\n      setDeeplink(generateDeeplink(context, contextId))\n    }\n    else setDeeplink('')\n  }, [context, contextId])\n\n  return (\n    <ChakraProvider>\n      <VStack align=\"center\" w=\"100%\" px=\"10%\">\n        <Heading>BrightID Test App</Heading>\n        <Box borderWidth=\"1px\" borderColor=\"grey.300\" p=\"5px\" minWidth=\"200px\">\n          <Heading size=\"sm\">Application Context</Heading>\n          <HStack><VStack>\n            <Input my=\"5px\" placeholder=\"Context\" value={context} onChange={(evt) => setContext(evt.target.value)} />\n            <Input placeholder=\"ContextId\" value={contextId} onChange={(evt) => setContextId(evt.target.value)} />\n            <Button onClick={generateContextId}>Generate ContextId</Button>\n          </VStack>\n            <VStack>\n              <Heading size=\"xs\">Linking QR Code</Heading>\n              <Skeleton isLoaded={deeplink !== ''}>\n                <QRCode value={deeplink ? deeplink : ''} />\n              </Skeleton>\n              <Skeleton isLoaded={deeplink !== ''}>\n                <Link color=\"blue.700\" w=\"128px\" overflow=\"ellipsis\" href={deeplink}>Clickable link</Link>\n              </Skeleton>\n            </VStack>\n          </HStack>\n        </Box>\n        <Box borderWidth=\"1px\" borderColor=\"grey.300\" p=\"5px\" minWidth=\"200px\" >\n          <Heading size=\"sm\">ContextID Status</Heading>\n          <Flex direction=\"row\">\n            <VStack align=\"start\"><HStack mb=\"5px\">\n              <Button w=\"200px\" onClick={verify} isDisabled={!context || !contextId}>Check status</Button>\n              <Text w=\"200px\">Status verified: {verified && verified.hasOwnProperty('unique') ? verified.unique.toString() : 'unknown '}</Text>\n            </HStack>\n            <Button w=\"200px\" onClick={trySponsor} isDisabled={!privateKey || !context || !contextId}>Sponsor</Button>\n            </VStack>\n            <Box>\n              <Heading size=\"xs\">Node Response</Heading>\n            <Code>\n              <Textarea height=\"200px\" fontSize={10} value={res} isReadOnly={true} />\n            </Code>\n            </Box>\n            </Flex>\n        </Box>\n        <Box borderWidth=\"1px\" borderColor=\"grey.300\" p=\"5px\">\n          <Heading size=\"sm\">Application Keys</Heading>\n          <Input my=\"5px\" placeholder=\"Sponsor Private Key\" value={privateKey} onChange={(evt) => setPrivateKey(evt.target.value)} />\n          <Input placeholder=\"Testing Key\" value={testingKey} onChange={(evt) => setTestingKey(evt.target.value)} />\n        </Box>\n        <Box borderWidth=\"1px\" borderColor=\"grey.300\" p=\"5px\" minWidth=\"200px\">\n          <Heading size=\"sm\">Set Test Blocks</Heading>\n          <Text>Use these buttons to temporarily remove a context ID's status (verified/sponsored/linked) for a given context</Text>\n          <HStack spacing={4}>\n            <Button onClick={() => testBlocks('verification')} isDisabled={!testingKey || !context || !contextId}>Unverify</Button>\n            <Button onClick={() => testBlocks('sponsorship')} isDisabled={!testingKey || !context || !contextId}>Unsponsor</Button>\n            <Button onClick={() => testBlocks('link')} isDisabled={!testingKey || !context || !contextId} >Unlink</Button>\n          </HStack>\n        </Box>\n        <Box borderWidth=\"1px\" borderColor=\"grey.300\" p=\"5px\" minWidth=\"200px\">\n          <Heading size=\"sm\">Remove Test Blocks</Heading>\n          <Text>Use these buttons to remove test blocks previously set for a context ID's status (verified/sponsored/linked) for a given context</Text>\n          <HStack spacing={4}>\n            <Button onClick={() => deleteTestBlocks('verification')} isDisabled={!testingKey || !context || !contextId}>Delete Unverify</Button>\n            <Button onClick={() => deleteTestBlocks('sponsorship')} isDisabled={!testingKey || !context || !contextId}>Delete Unsponsor</Button>\n            <Button onClick={() => deleteTestBlocks('link')} isDisabled={!testingKey || !context || !contextId}>Delete Unlink</Button>\n          </HStack>\n        </Box>\n      </VStack>\n    </ChakraProvider>\n  )\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst appMethods_1 = require(\"./appMethods\");\nexports.generateDeeplink = appMethods_1.generateDeeplink;\nexports.verifyContextId = appMethods_1.verifyContextId;\nexports.sponsor = appMethods_1.sponsor;\nexports.availableSponsorships = appMethods_1.availableSponsorships;\nconst testMethods_1 = require(\"./testMethods\");\nexports.putTestingBlock = testMethods_1.putTestingBlock;\nexports.removeTestingBlock = testMethods_1.removeTestingBlock;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst axios_1 = __importDefault(require(\"axios\"));\nconst fast_json_stable_stringify_1 = __importDefault(require(\"fast-json-stable-stringify\"));\nconst base64_js_1 = __importDefault(require(\"base64-js\"));\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nexports.generateDeeplink = (context, contextId, nodeUrl) => {\n    const endpoint = nodeUrl ? nodeUrl : `http:%2f%2fnode.brightid.org`;\n    return `brightid://link-verification/${endpoint}/${context}/${contextId}`;\n};\nexports.verifyContextId = (context, contextId, nodeUrl) => __awaiter(void 0, void 0, void 0, function* () {\n    const endpoint = nodeUrl\n        ? nodeUrl + \"/node/v5/verifications\"\n        : \"https://app.brightid.org/node/v5/verifications\";\n    try {\n        const res = yield axios_1.default.get(`${endpoint}/${context}/${contextId}`);\n        console.log(res.data);\n        return res.data.data;\n    }\n    catch (err) {\n        console.log(err.response);\n        return {\n            status: err.response.status,\n            statusText: err.response.statusText,\n            data: err.response.data,\n        };\n    }\n});\nexports.sponsor = (key, context, contextId, nodeUrl) => __awaiter(void 0, void 0, void 0, function* () {\n    const endpoint = nodeUrl\n        ? nodeUrl + `/node/v5/operations`\n        : \"https://app.brightid.org/node/v5/operations\";\n    let sponsorships = yield exports.availableSponsorships(context, nodeUrl);\n    if (typeof sponsorships === \"number\" && sponsorships < 1) {\n        return { status: \"error\", statusReason: \"no available sponsorships\" };\n    }\n    if (typeof sponsorships !== \"number\")\n        return sponsorships;\n    const op = {\n        name: \"Sponsor\",\n        app: context,\n        contextId: contextId,\n        timestamp: Date.now(),\n        v: 5,\n        sig: \"\",\n    };\n    const message = getMessage(op);\n    const arrayedMessage = Buffer.from(message);\n    const keyBuffer = base64_js_1.default.toByteArray(key);\n    let signature = tweetnacl_1.default.sign.detached(arrayedMessage, keyBuffer);\n    op.sig = base64_js_1.default.fromByteArray(signature);\n    console.log(op);\n    try {\n        let res = yield axios_1.default.post(endpoint, op);\n        console.log(res);\n        return { status: \"success\", statusReason: res.data.data.hash };\n    }\n    catch (err) {\n        console.log(err.response);\n        return {\n            status: err.response.status,\n            statusText: err.response.statusText,\n            data: err.response.data,\n        };\n    }\n});\nconst getMessage = (op) => {\n    const signedOp = {};\n    for (let k in op) {\n        if ([\"sig\", \"sig1\", \"sig2\", \"hash\"].includes(k)) {\n            continue;\n        }\n        signedOp[k] = op[k];\n    }\n    return fast_json_stable_stringify_1.default(signedOp);\n};\nexports.availableSponsorships = (context, nodeUrl) => __awaiter(void 0, void 0, void 0, function* () {\n    const endpoint = nodeUrl\n        ? nodeUrl + `/node/v5/testblocks`\n        : \"https://app.brightid.org/node/v5/apps\";\n    try {\n        let res = yield axios_1.default.get(`${endpoint}/${context}`);\n        console.log(res);\n        return res.data.data.unusedSponsorships;\n    }\n    catch (err) {\n        console.log(err.response);\n        return {\n            status: err.response.status,\n            statusText: err.response.statusText,\n            data: err.response.data,\n        };\n    }\n});\n"],"sourceRoot":""}